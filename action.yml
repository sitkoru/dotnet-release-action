name: "sitkoru/docker-deploy-action"
description: "Action to deploy docker container to server"
branding:
  icon: "package"
  color: "blue"

inputs:
  version:
    description: "Service version"
    required: true
  docker_registry:
    description: "Docker registry url"
    required: true
  docker_image:
    description: "Docker image name"
    required: true
  docker_registry_username:
    description: "Deploy registry username"
    required: true
  docker_registry_password:
    description: "Docker registry password"
    required: true
  project_path:
    description: "Path to .csproj"
    required: true
  publish_args:
    description: "Additional arguments to publish command (Optional)"
    required: false
  docker_file:
    description: "Path to Dockerfile"
    required: true
  docker_push:
    description: "Publish docker image"
    required: true
    default: "true"
  nuget_host:
    description: "Nuget source url"
    required: false
  nuget_token:
    description: "Nuget source token"
    required: false

runs:
  using: "composite"
  steps:
    - name: Prepare
      id: prep
      shell: bash
      env:
        VERSION: ${{ inputs.version }}
      run: |
        DOCKER_IMAGE=${{ inputs.DOCKER_REGISTRY_URL }}/${{ inputs.DOCKER_IMAGE_NAME }}
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
        fi
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        rm -rf app
        mkdir app
    - uses: actions/setup-dotnet@v1
      name: Authenticate nuget source
      if: ${{ inputs.nuget_host != '' }} 
      with:
        source-url: ${{ inputs.nuget_host }}
      env:
        NUGET_AUTH_TOKEN: ${{ inputs.nuget_token }}
    - name: Publish app
      run: dotnet publish ${{ inputs.project_path }} -c Release /p:Version=${{ inputs.version }} -o app ${{ inputs.publish_args }}
      shell: bash
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Docker Registry
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.docker_registry_username }}
        password: ${{ inputs.docker_registry_password }}
        registry: ${{ inputs.docker_registry }}
    - name: Build and push docker image
      uses: docker/build-push-action@v2
      with:
        file: ${{ inputs.docker_file }}
        context: ./app
        build-args: version=${{ inputs.version }}
        push: ${{ inputs.docker_push == 'true' }} 
        tags: ${{ steps.prep.outputs.tags }}
        labels: |
          org.opencontainers.image.title=${{ github.event.repository.name }}
          org.opencontainers.image.description=${{ github.event.repository.description }}
          org.opencontainers.image.url=${{ github.event.repository.html_url }}
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.version=${{ inputs.version }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}